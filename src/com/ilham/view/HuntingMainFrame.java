/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ilham.view;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Ilham MMR <ilham.mmr@gmail.com>
 */
public class HuntingMainFrame extends javax.swing.JFrame {

    /**
     * Creates new form HuntingMainFrame
     */
    private List<Hunting> huntingList;
    private Controller controller;

    public HuntingMainFrame() {
        initComponents();
        huntingList = new ArrayList<>();
        controller = new Controller();
        menuPanel.setVisible(false);

    }

    private void deleteAllRows() {
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }

    private void showData() {
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < huntingList.size(); i++) {
            Hunting hunting = huntingList.get(i);

            String data[] = {hunting.getAnimal(), hunting.getTypeOfAnimal(), hunting.getPlace(), hunting.getWeapon(), hunting.getDate()};
            tableModel.addRow(data);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        deleteRow = new javax.swing.JMenuItem();
        updateRow = new javax.swing.JMenuItem();
        basePanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        addBtn = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        historyBtn = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        saveToTxtBtn = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        topPanel = new javax.swing.JPanel();
        humbergerMenuLabel = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        addPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        animalField = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        placeField = new javax.swing.JTextField();
        weaponField = new javax.swing.JTextField();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        submitBtn = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        importMenu = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exportMenu = new javax.swing.JMenuItem();

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(new FileNameExtensionFilter("My hunting history .hnt", "hnt"));

        deleteRow.setText("Delete");
        deleteRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteRowMouseClicked(evt);
            }
        });
        deleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteRow);

        updateRow.setText("Update");
        updateRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRowActionPerformed(evt);
            }
        });
        jPopupMenu1.add(updateRow);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        basePanel.setBackground(new java.awt.Color(61, 61, 61));
        basePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuPanel.setBackground(new java.awt.Color(75, 75, 75));
        menuPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        addBtn.setBackground(new java.awt.Color(75, 75, 75));
        addBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addBtnMouseReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ADD");

        javax.swing.GroupLayout addBtnLayout = new javax.swing.GroupLayout(addBtn);
        addBtn.setLayout(addBtnLayout);
        addBtnLayout.setHorizontalGroup(
            addBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(addBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        addBtnLayout.setVerticalGroup(
            addBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
            .addGroup(addBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        historyBtn.setBackground(new java.awt.Color(75, 75, 75));
        historyBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        historyBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        historyBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historyBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                historyBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                historyBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                historyBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                historyBtnMouseReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("HISTORY");

        javax.swing.GroupLayout historyBtnLayout = new javax.swing.GroupLayout(historyBtn);
        historyBtn.setLayout(historyBtnLayout);
        historyBtnLayout.setHorizontalGroup(
            historyBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(historyBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(historyBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        historyBtnLayout.setVerticalGroup(
            historyBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
            .addGroup(historyBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(historyBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        saveToTxtBtn.setBackground(new java.awt.Color(75, 75, 75));
        saveToTxtBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        saveToTxtBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveToTxtBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveToTxtBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveToTxtBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveToTxtBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saveToTxtBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveToTxtBtnMouseReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("PRINT TO TXT");

        javax.swing.GroupLayout saveToTxtBtnLayout = new javax.swing.GroupLayout(saveToTxtBtn);
        saveToTxtBtn.setLayout(saveToTxtBtnLayout);
        saveToTxtBtnLayout.setHorizontalGroup(
            saveToTxtBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(saveToTxtBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(saveToTxtBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        saveToTxtBtnLayout.setVerticalGroup(
            saveToTxtBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
            .addGroup(saveToTxtBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(saveToTxtBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(historyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveToTxtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(historyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(saveToTxtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        basePanel.add(menuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 190, 430));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ilham/view/Icons/icons8-hunt-64.png"))); // NOI18N
        basePanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 56, -1, -1));

        jLabel2.setBackground(new java.awt.Color(189, 235, 125));
        jLabel2.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(187, 0, 242));
        jLabel2.setText("HUNTING HISTORY");
        basePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 126, -1, -1));

        jLabel3.setBackground(new java.awt.Color(189, 189, 189));
        jLabel3.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(200, 200, 200));
        jLabel3.setText("TRACK YOUR HUNTING HISTORY");
        basePanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 160, -1));

        jLabel4.setForeground(new java.awt.Color(200, 200, 200));
        jLabel4.setText("________________________");
        basePanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 180, -1));

        jLabel5.setBackground(new java.awt.Color(189, 189, 189));
        jLabel5.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(200, 200, 200));
        jLabel5.setText("DEVELOPED BY ILHAM MMR");
        basePanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 380, 180, -1));

        topPanel.setBackground(new java.awt.Color(61, 61, 61));

        humbergerMenuLabel.setForeground(new java.awt.Color(102, 0, 255));
        humbergerMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        humbergerMenuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ilham/view/Icons/menu_24px.png"))); // NOI18N
        humbergerMenuLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        humbergerMenuLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                humbergerMenuLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                humbergerMenuLabelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addComponent(humbergerMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 710, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(humbergerMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        basePanel.add(topPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 30));

        mainPanel.setBackground(new java.awt.Color(75, 75, 75));
        mainPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        mainPanel.setLayout(new java.awt.CardLayout());

        addPanel.setBackground(new java.awt.Color(75, 75, 75));

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Animal:");

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("Type of Animal:");

        jLabel10.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Place:");

        jLabel11.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("Date:");

        jLabel12.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("Weapon:");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(204, 204, 204));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("oviparous ");
        jRadioButton1.setActionCommand("oviparous");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(204, 204, 204));
        jRadioButton2.setText("viviparous ");
        jRadioButton2.setActionCommand("viviparous");

        dateChooserCombo1.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserCombo1.setCalendarBackground(new java.awt.Color(75, 75, 75));
    dateChooserCombo1.setCalendarPreferredSize(new java.awt.Dimension(350, 300));
    dateChooserCombo1.setFormat(1);
    dateChooserCombo1.setNavigateFont(new java.awt.Font("Serif", java.awt.Font.PLAIN, 12));

    submitBtn.setBackground(new java.awt.Color(38, 38, 38));
    submitBtn.setForeground(new java.awt.Color(38, 38, 38));
    submitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ilham/view/Icons/plus_math_52px.png"))); // NOI18N
    submitBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            submitBtnActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
    addPanel.setLayout(addPanelLayout);
    addPanelLayout.setHorizontalGroup(
        addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(submitBtn)
            .addGap(143, 143, 143))
        .addGroup(addPanelLayout.createSequentialGroup()
            .addGap(66, 66, 66)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel11)
                .addComponent(jLabel8)
                .addComponent(jLabel9)
                .addComponent(jLabel10)
                .addComponent(jLabel12))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addPanelLayout.createSequentialGroup()
                    .addComponent(jRadioButton1)
                    .addGap(18, 18, 18)
                    .addComponent(jRadioButton2))
                .addComponent(animalField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(weaponField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(placeField, javax.swing.GroupLayout.Alignment.LEADING))
                .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(149, Short.MAX_VALUE))
    );
    addPanelLayout.setVerticalGroup(
        addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(addPanelLayout.createSequentialGroup()
            .addGap(93, 93, 93)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(animalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel8))
            .addGap(18, 18, 18)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel9)
                .addComponent(jRadioButton1)
                .addComponent(jRadioButton2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel10)
                .addComponent(placeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel12)
                .addComponent(weaponField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(24, 24, 24)
            .addComponent(submitBtn)
            .addContainerGap(55, Short.MAX_VALUE))
    );

    mainPanel.add(addPanel, "card2");

    tablePanel.setBackground(new java.awt.Color(75, 75, 75));
    tablePanel.setPreferredSize(new java.awt.Dimension(556, 426));

    jLabel13.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
    jLabel13.setForeground(new java.awt.Color(255, 255, 255));
    jLabel13.setText("SEARCH");

    jTextField4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField4ActionPerformed(evt);
        }
    });
    jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jTextField4KeyReleased(evt);
        }
    });

    jTable1.setBackground(new java.awt.Color(62, 65, 65));
    jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
    jTable1.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
    jTable1.setForeground(new java.awt.Color(255, 255, 219));
    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Animal", "Type of Animal", "Place", "Weapon", "Date"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable1.setGridColor(new java.awt.Color(0, 0, 0));
    jTable1.setName("HISTORY"); // NOI18N
    jTable1.setSelectionBackground(new java.awt.Color(30, 23, 23));
    jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
    jTable1.setShowGrid(true);
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mousePressed(java.awt.event.MouseEvent evt) {
            jTable1MousePressed(evt);
        }
    });
    jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTable1KeyPressed(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
    tablePanel.setLayout(tablePanelLayout);
    tablePanelLayout.setHorizontalGroup(
        tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(tablePanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel13)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(52, 52, 52))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
            .addContainerGap())
    );
    tablePanelLayout.setVerticalGroup(
        tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(tablePanelLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel13)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
            .addContainerGap())
    );

    mainPanel.add(tablePanel, "card3");

    basePanel.add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 560, 430));

    jMenuBar1.setBackground(new java.awt.Color(51, 51, 51));
    jMenuBar1.setForeground(new java.awt.Color(102, 51, 255));

    jMenu1.setText("File");

    importMenu.setText("Import");
    importMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            importMenuActionPerformed(evt);
        }
    });
    jMenu1.add(importMenu);

    exportMenu.setText("Export");
    exportMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exportMenuActionPerformed(evt);
        }
    });
    jMenu1.add(exportMenu);

    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(basePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(basePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void humbergerMenuLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_humbergerMenuLabelMouseEntered

    }//GEN-LAST:event_humbergerMenuLabelMouseEntered
    int x = 0;
    private void humbergerMenuLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_humbergerMenuLabelMouseClicked
        menuPanel.setVisible(true);
        if (x == 0) {
            menuPanel.setSize(x, 430);
            Thread th = new Thread() {
                @Override
                public void run() {
                    try {
                        for (int i = 0; i <= x; i++) {
                            Thread.sleep(1);
                            menuPanel.setSize(i, 430);
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            };
            th.start();
            x = 190;
        } else if (x == 190) {

            menuPanel.setSize(190, 430);
            Thread th = new Thread() {
                @Override
                public void run() {
                    try {

                        for (int i = 190; i >= 0; i--) {
                            Thread.sleep(1);
                            menuPanel.setSize(i, 430);

                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            };
            th.start();
            x = 0;
        }
    }//GEN-LAST:event_humbergerMenuLabelMouseClicked

    private void addBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseEntered
        addBtn.setBackground(new Color(62, 62, 62));
    }//GEN-LAST:event_addBtnMouseEntered

    private void addBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseExited
        addBtn.setBackground(new Color(75, 75, 75));
    }//GEN-LAST:event_addBtnMouseExited

    private void addBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMousePressed
        addBtn.setBackground(new Color(50, 50, 50));
    }//GEN-LAST:event_addBtnMousePressed

    private void addBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseReleased
        addBtn.setBackground(new Color(75, 75, 75));
    }//GEN-LAST:event_addBtnMouseReleased

    private void historyBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBtnMouseEntered
        historyBtn.setBackground(new Color(62, 62, 62));
    }//GEN-LAST:event_historyBtnMouseEntered

    private void historyBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBtnMouseExited
        historyBtn.setBackground(new Color(75, 75, 75));
    }//GEN-LAST:event_historyBtnMouseExited

    private void historyBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBtnMousePressed
        historyBtn.setBackground(new Color(50, 50, 50));
    }//GEN-LAST:event_historyBtnMousePressed

    private void historyBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBtnMouseReleased
        historyBtn.setBackground(new Color(75, 75, 75));

    }//GEN-LAST:event_historyBtnMouseReleased

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        mainPanel.add(addPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_addBtnMouseClicked

    private void historyBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBtnMouseClicked
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        mainPanel.add(tablePanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_historyBtnMouseClicked

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        String animal = animalField.getText();
        String typeOfAnimal = buttonGroup1.getSelection().getActionCommand();
        String place = placeField.getText();
        String weapon = weaponField.getText();
        String date = dateChooserCombo1.getText();
        if (animal.isEmpty() || typeOfAnimal.isEmpty() || place.isEmpty() || weapon.isEmpty() || date.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fill in the form properly!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Hunting hunting = new Hunting(animal, typeOfAnimal, place, weapon, date);
            huntingList.add(hunting);
            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();

            String data[] = {animal, typeOfAnimal, place, weapon, date};
            tableModel.addRow(data);

        }

    }//GEN-LAST:event_submitBtnActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void importMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importMenuActionPerformed
        if (fileChooser.showOpenDialog(HuntingMainFrame.this) == JFileChooser.APPROVE_OPTION) {
            System.out.println(fileChooser.getSelectedFile());

            try {
                deleteAllRows();
                controller.loadFromFile(fileChooser.getSelectedFile());
                huntingList = controller.getHuntingList();

                showData();

            } catch (IOException e) {
                JOptionPane.showMessageDialog(HuntingMainFrame.this, "Could not load data from file", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        System.out.println("gagal");
    }//GEN-LAST:event_importMenuActionPerformed

    private void exportMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportMenuActionPerformed
        if (fileChooser.showSaveDialog(HuntingMainFrame.this) == JFileChooser.APPROVE_OPTION) {
            System.out.println(fileChooser.getSelectedFile());
            try {
                controller.setHuntingList(huntingList);
                controller.saveToFile(fileChooser.getSelectedFile());

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(HuntingMainFrame.this, "Could not save data to file", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_exportMenuActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        DefaultTableModel table = (DefaultTableModel) jTable1.getModel();

        String search = jTextField4.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + search));
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        int row = jTable1.rowAtPoint(evt.getPoint());
        jTable1.getSelectionModel().setSelectionInterval(row, row);
        if (evt.getButton() == MouseEvent.BUTTON3) {
            jPopupMenu1.show(jTable1, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void deleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRowCount() == 1) {
            int index = jTable1.getSelectedRow();
            tableModel.removeRow(index);
            huntingList.remove(index);
        }
    }//GEN-LAST:event_deleteRowActionPerformed

    private void deleteRowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteRowMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteRowMouseClicked

    private void updateRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRowActionPerformed

        UpdateHuntingForm updateHuntingForm = new UpdateHuntingForm();

        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        int index = jTable1.getSelectedRow();
        if (jTable1.getSelectedRowCount() == 1) {

            updateHuntingForm.setUpdateInfoListener(new UpdateInfoListener() {
                @Override
                public void updateEventOccured(UpdateInfo updateInfo) {

                    String animal = updateInfo.getAnimal();
                    String typeOfAnimal = updateInfo.getTypeOfAnimal();
                    String place = updateInfo.getPlace();
                    String weapon = updateInfo.getWeapon();
                    String date = updateInfo.getDate();

                    Hunting hunting = huntingList.get(index);
                    hunting.setAnimal(animal);
                    hunting.setTypeOfAnimal(typeOfAnimal);
                    hunting.setPlace(place);
                    hunting.setWeapon(weapon);
                    hunting.setDate(date);

                    tableModel.setValueAt(animal, jTable1.getSelectedRow(), 0);
                    tableModel.setValueAt(typeOfAnimal, jTable1.getSelectedRow(), 1);
                    tableModel.setValueAt(place, jTable1.getSelectedRow(), 2);
                    tableModel.setValueAt(weapon, jTable1.getSelectedRow(), 3);
                    tableModel.setValueAt(date, jTable1.getSelectedRow(), 4);

                }
            });

            updateHuntingForm.setVisible(true);

        }
    }//GEN-LAST:event_updateRowActionPerformed

    private void saveToTxtBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveToTxtBtnMouseClicked
       
        String userFileName = JOptionPane.showInputDialog(null, "Enter the name of the txt file you want to save!", JOptionPane.QUESTION_MESSAGE);
        if (userFileName == null) {
            JOptionPane.showMessageDialog(HuntingMainFrame.this, "Could not print to txt file", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fileChooser.setFileFilter( new FolderFilter() );
            if (fileChooser.showSaveDialog(HuntingMainFrame.this) == JFileChooser.APPROVE_OPTION) {

                try {
                    if (!huntingList.isEmpty()) {
                        File file = fileChooser.getSelectedFile();
                        System.out.println(file.getAbsoluteFile());
                        System.out.println(file.getAbsolutePath());
                        FileWriter fileWriter = new FileWriter(file.getAbsolutePath() + "\\" + userFileName + ".txt");
                        BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                        bufferedWriter.write("+++++++++++HUNTING HISTORY++++++++++++"
                                + "\n //AUTO GENERATED");
                        bufferedWriter.newLine();
                        for (Hunting h : huntingList) {
                            bufferedWriter.write(h.getAnimal() + "_" + h.getTypeOfAnimal() + "_" + h.getPlace() + "_" + h.getWeapon() + "_" + h.getDate());
                            bufferedWriter.newLine();
                        }

                        bufferedWriter.flush();
                        bufferedWriter.close();
                        JOptionPane.showMessageDialog(HuntingMainFrame.this, "the data has been succesfully printed to the txt file", "Info", JOptionPane.INFORMATION_MESSAGE);

                    } else {
                        JOptionPane.showMessageDialog(HuntingMainFrame.this, "Table is empty", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(HuntingMainFrame.this, "Could not save data to file", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }


    }//GEN-LAST:event_saveToTxtBtnMouseClicked

    private void saveToTxtBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveToTxtBtnMouseEntered
        saveToTxtBtn.setBackground(new Color(62, 62, 62));
    }//GEN-LAST:event_saveToTxtBtnMouseEntered

    private void saveToTxtBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveToTxtBtnMouseExited
        saveToTxtBtn.setBackground(new Color(75, 75, 75));
    }//GEN-LAST:event_saveToTxtBtnMouseExited

    private void saveToTxtBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveToTxtBtnMousePressed
        saveToTxtBtn.setBackground(new Color(50, 50, 50));
    }//GEN-LAST:event_saveToTxtBtnMousePressed

    private void saveToTxtBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveToTxtBtnMouseReleased
        saveToTxtBtn.setBackground(new Color(75, 75, 75));
    }//GEN-LAST:event_saveToTxtBtnMouseReleased

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed

        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        if ((evt.getKeyCode() == KeyEvent.VK_DELETE) && (jTable1.getSelectedRowCount() == 1)) {

            int index = jTable1.getSelectedRow();
            tableModel.removeRow(index);
            huntingList.remove(index);
        }

    }//GEN-LAST:event_jTable1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HuntingMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HuntingMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HuntingMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HuntingMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HuntingMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addBtn;
    private javax.swing.JPanel addPanel;
    private javax.swing.JTextField animalField;
    private javax.swing.JPanel basePanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JMenuItem deleteRow;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel historyBtn;
    private javax.swing.JLabel humbergerMenuLabel;
    private javax.swing.JMenuItem importMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JTextField placeField;
    private javax.swing.JPanel saveToTxtBtn;
    private javax.swing.JButton submitBtn;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JMenuItem updateRow;
    private javax.swing.JTextField weaponField;
    // End of variables declaration//GEN-END:variables
}
